features:
  - title: Service discovery
    description: Production apps are often composed of many individual services. Apps must therefore look up service endpoints via environment variables, DNS, specific IP addresses, or a client-library before they can call them. The challenge is to enable this in a manner that scales well as  more services are added over time.
    available: "yes"

  - title: Service mesh
    description: After apps successfully find a service, they also need to authenticate to it, encrypt the communication channel, balance the load, and route traffic in specific ways.
    available: "soon"

  - title: Service Resilience
    description: Apps must handle retries, exponential back-off, jitter, circuit breakers, thread management, async I/O, throttling, error handling, and much more in order to continue running in the face of changing demand, unpredictable network conditions and varying resource usage.
    available: "soon"

  - title: Metrics / observability
    description: Correctly instrumented request tracing and observability allows developers to drill into production issues quickly and efficiently, while ensuring that resource consumption remains within desired parameters. Comprehensive observability is essential to successfully running an application in production.
    available: "yes"

  - title: Logging
    description: Dockerizing apps makes sense from a deployment perspective, yet it complicates logging. Not all fameworks send logs to STDOUT or STDERR by default, and Dockerized apps may require specialized conifgurations or sidecar applications in order to aggregate and ship logs correctly.
    available: "yes"

  - title: Packaging
    description: Dockerizing an app properly is surprisingly hard. Developers must balance keeping base images small against keeping them secure and up-to-date. Successfully packaging a production app also requires thoughtful use of the Docker Layer Cache, as well as strategies for versioning and storing artifacts.
    available: "yes"

  - title: Secrets management
    description: Secure secrets management is critical to any production application, but doubly so when dealing with strict compliance requirements such as HIPAA. Apps may use an external service to store or encrypt secrets (e.g., AWS Secrets Manager, Vault, KMS, K8S), but they require additional configuration to fetch and use these secrets properly in a way that maintains compliance.
    available: "yes"

  - title: App configuration
    description: Apps must be configurable to run differently in different environments (dev, stage, prod, etc). They may use config files in JSON, YAML, or a thousand other formats. Configuration involves careful treatment of sensitive values, hot reloading to prevent downtime, exposing performance tuning settings, and contstraints unique to the organization deploying the application.
    available: "yes"

  - title: Database management
    description: Apps require schema migrations using tools like Flyway, ActiveRecord, Phinx, etc. These may need to be run before the app boots or as a separate deploy step. Secure database connections, connection pooling, TLS usage, certificate validation, service discovery, and ORM or DB library usage must all be thought through and carefully implemented.
    available: "yes"

  - title: Server hardening
    description: Apps running on EC2 must handle or consider security and compliance requirements such as firewalls, anti-virus, file integrity monitoring, SSH access, VPN access, automatic updates, time synchronization and more. Server hardening is especially critical when attempting to reach compliance with standards like HIPAA.
    available: "yes"

  - title: Build system
    description: Frameworks all have a build system that you have to configure in order to properly manage dependencies, compilation, tests and more. Each app will therefore have build commands that must be invoked in the correct order to install dependencies, clean up or generate caches, synchronize file systems, begin serving HTTP traffic, etc.
    available: "yes"

  - title: Automated tests
    description: All maintainable applications need good tests, but setting them up correctly requires knowledge of pre-commit checks, code-formatting, static analysis, unit tests, integration tests, end to end tests, performance tests, testing frameworks, clear test output and more.
    available: "yes"

  - title: Asset pipeline
    description: Applications that depend on static content typically require asset compilation (e.g., compile TypeScript to JS), minification, concatenation, fingerprinting, deployment to one or more CDNs, as well as logic to make the URLs work in both development and production environments.

    available: "soon"

  - title: Security baseline
    description: Every app needs a baseline of security features, such as CSRF protection, XSS protection (especially in the application's templating language), security headers, consideration for OS users, authentication and authorization, and more.
    available: "soon"
