- id: reposcreenshot
  title: File structure
  content: |
    <figure>
      <pre>
      <code class="language-treeview">infrastructure-live/
      |-- README.md
      |-- prod/
      |   `-- us-west-2/
      |       |-- networking/
      |       |   |-- alb/
      |       |   `-- vpc/
      |       `-- services/
      |           |-- eks-cluster/
      |           |-- eks-core-services/
      |           `-- sample-app/
      `-- stage/
          `-- us-west-2/
              |-- networking/
              |   |-- alb/
              |   `-- vpc/
              `-- services/
                  |-- eks-cluster/
                  |-- eks-core-services/
                  `-- sample-app/</code></pre>
    </figure>

- id: cluster-deploy-code
  title: eks-cluster/main.tf
  content: |
    <figure><figcaption>prod/us-west-2/services/eks-cluster/main.tf</figcaption>
      <pre>
      <code class="language-hcl">
      # Example snippet from Terraform code to deploy an EKS cluster

      module "eks_cluster" {
        source =
          "github.com/gruntwork-io/service-catalog//eks-cluster"
        version = "v0.51.0"

        cluster_name = "my-prod-cluster"
        vpc_id       = dependency.vpc.outputs.vpc_id

        managed_node_group_configurations = {
          "prod-asg" = {
            min_size   = 2
            max_size   = 4
            tags       = local.default_tags
          }
        }

        enable_pod_security_policies     = true
        enable_network_security_policies = true
        enable_eks_cluster_hardening     = true
      }

      module "eks_core_services" {
        source =
          "github.com/gruntwork-io/service-catalog//core-services"
        version = "v0.51.0"

        eks_cluster_arn = module.eks_cluster.eks_cluster_arn

        # Enable services based on form input
        # All other services default to false, and thus
        # are not enumerated.
        enable_istio              = true
        enable_argocd             = true
        enable_prometheus         = true
        enable_elastic            = true
        enable_cluster_autoscaler = true
        enable_sealed_secrets     = true
        enable_external_dns       = true
        enable_harbor             = true
        enable_opa = {
          k8s_admission_controller       = true
          terraform_admission_controller = true
        }

        # Additional service configurations based on form input
        # NOTE: This is configuring the prod cluster,
        #       so only setup the prod domain.
        #       For dev, this will be set to gruntwork-dev.com
        external_dns_route53_hosted_zone_id_filters =
          ["gruntwork.io"]
      }
      </code>
      </pre>
      <figure>

- id: app-deploy-code
  title: sample-app/main.tf
  content: |
    <figure><figcaption>prod/us-west-2/services/sample-app/main.tf</figcaption>
      <pre>
      <code class="language-hcl">
      # Example snippet from Terraform code to deploy an app

      resource "helm_release" "application" {
        name       = var.application_name
        repository = "https://helmcharts.gruntwork.io"
        chart      = "k8s-service"
        version    = "v0.1.7"
        namespace  = var.namespace

        values = [
          yamlencode(
            merge(
              local.helm_chart_input,
              var.override_chart_inputs,
            ),
          ),
        ]
      }

      locals {
        helm_chart_input = {
          applicationName = var.application_name

          containerImage = {
            repository = var.container_image["repository"]
            tag        = var.container_image["tag"]
            pullPolicy = var.container_image["pull_policy"]
          }
        }

        containerPorts = {
          http = {
            port     = var.container_port
            protocol = var.container_protocol
          }
          liveness = {
            port     = var.liveness_probe_port
            protocol = "TCP"
          }
          readiness = {
            port     = var.readiness_probe_port
            protocol = "TCP"
          }
        }

        replicaCount = 3

        horizontalPodAutoscaler = {
          enabled              = true
          minReplicas          = 2
          maxReplicas          = 10
          avgCpuUtilization    = 90
          avgMemoryUtilization = 85
        }
      }
      </code>
      </pre>
      <figure>
